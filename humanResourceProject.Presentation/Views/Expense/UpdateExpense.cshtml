@model ExpenseDTO

@{
    ViewData["Title"] = "UpdateExpense";
}

<h1>Masraf Talebi Güncelle</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateExpense">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                <label asp-for="AmountOfExpense" class="control-label"></label>
                <input id="amountInput" value="@Model.AmountOfExpense" type="number" min="1" asp-for="AmountOfExpense" class="form-control" />
                <span asp-validation-for="AmountOfExpense" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="ExpenseType" class="control-label"></label>
                <select asp-for="ExpenseType" class="form-control">
                    @{
                        var enumType = typeof(ExpenseType);
                        var enumValues = enumType.GetEnumValues();
                        foreach (var enumValue in enumValues)
                        {
                            var displayAttribute = enumType.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                            var displayName = displayAttribute?.GetName() ?? enumValue.ToString();
                            <option value="@enumValue">@displayName</option>
                        }
                    }
                </select>
                <span asp-validation-for="ExpenseType" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Currency" class="control-label"></label>
                <select asp-for="Currency" class="form-control">
                    @{
                        var enumTypeCurrency = typeof(Currency);
                        var enumValuesCurrency = enumTypeCurrency.GetEnumValues();
                        foreach (var enumValue in enumValuesCurrency)
                        {
                            var displayAttribute = enumTypeCurrency.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                            var displayName = displayAttribute?.GetName() ?? enumValue.ToString();
                            <option value="@enumValue">@displayName</option>
                        }
                    }

                </select>
                <span asp-validation-for="Currency" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="DateOfExpense" class="control-label"></label>
                <input id="dateInput" value="@Model.DateOfExpense.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" type="date" asp-for="DateOfExpense" class="form-control" />
                <span asp-validation-for="DateOfExpense" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Explanation" class="control-label"></label>
                <textarea value="Explanation" asp-for="Explanation" class="form-control"></textarea>
                <span asp-validation-for="Explanation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UploadPath" class="control-label"></label>
                <input asp-for="UploadPath" type="file" class="form-control" />
                <span asp-validation-for="UploadPath" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <input asp-for="EmployeeId" type="hidden" class="form-control" />
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <input asp-for="Id" type="hidden" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Güncelle" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Anasayfaya Dön</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    // Set the initial value in the input field
    document.getElementById('amountInput').value = @Model.AmountOfExpense;
    document.getElementById('dateInput').value = @Model.DateOfExpense.ToString("yyyy-MM-dd");
</script>
