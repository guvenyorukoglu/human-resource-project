@model UpdateLeaveDTO

@{
    ViewData["Title"] = "UpdateLeave";
}

<h1>İzin Talebi Güncelle</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateLeave">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group  mb-4">
                <label asp-for="StartDateOfLeave" class="control-label"></label>
                <input id="dateInputStart" value="@Model.StartDateOfLeave.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" type="date" asp-for="StartDateOfLeave" class="form-control" />
                <span asp-validation-for="StartDateOfLeave" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="EndDateOfLeave" class="control-label"></label>
                <input id="dateInputEnd" value="@Model.EndDateOfLeave.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" type="date" asp-for="EndDateOfLeave" class="form-control" />
                <span asp-validation-for="EndDateOfLeave" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="LeaveType" class="control-label"></label>
                <select asp-for="LeaveType" class="form-control" />
                @{
                    var enumType = typeof(LeaveType);
                    var enumValues = enumType.GetEnumValues();
                    foreach (var enumValue in enumValues)
                    {
                        var displayAttribute = enumType.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                        var displayName = displayAttribute?.GetName() ?? enumValue.ToString();
                        <option value="@enumValue">@displayName</option>
                    }
                }
                <span asp-validation-for="LeaveType" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="Explanation" class="control-label"></label>
                <input asp-for="Explanation" class="form-control" />
                <span asp-validation-for="Explanation" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="DaysOfLeave" class="control-label"></label>
                <input id="amountInput" value="@Model.DaysOfLeave" type="number" min="0.5" step="0.5" asp-for="DaysOfLeave" class="form-control" />
                <span asp-validation-for="DaysOfLeave" class="text-danger"></span>
            </div>
            <div class="form-group mb-4">
                <input asp-for="EmployeeId" type="hidden" class="form-control" />
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
            <div class="form-group mb-4">
                <input asp-for="Id" type="hidden" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Güncelle" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Anasayfaya Dön</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    // Set the initial value in the input field
    document.getElementById('amountInput').value = @Model.DaysOfLeave;
    document.getElementById('dateInputStart').value = @Model.StartDateOfLeave.ToString("yyyy-MM-dd");
    document.getElementById('dateInputEnd').value = @Model.EndDateOfLeave.ToString("yyyy-MM-dd");

    document.getElementById('amountInput').addEventListener('input', function () {
        this.value = parseFloat(this.value) - (parseFloat(this.value) % 0.5);
    });
</script>
