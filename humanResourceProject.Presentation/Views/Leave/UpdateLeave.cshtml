@model UpdateLeaveDTO

@{
    ViewData["Title"] = "UpdateLeave";
    Layout = "~/Views/Shared/_HRLayout.cshtml";
}
<head>

</head>
<body>
    <div class="row">

        @Html.Partial("_PanelPartial")

        <div class="col-md-4" style="margin: 0 auto">
            <form asp-action="UpdateLeave">
                <div class="card shadow p-3 mb-5 bg-body rounded">
                    <div class="card-header">
                        <h1 class="card-title">İZİN GÜNCELLEME</h1>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label asp-for="LeaveType" class="control-label"></label>
                            <select asp-for="LeaveType" class="form-control">
                                @{
                                    var enumType = typeof(LeaveType);
                                    var enumValues = enumType.GetEnumValues();
                                    foreach (var enumValue in enumValues)
                                    {
                                        var displayAttribute = enumType.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                                        var displayName = displayAttribute?.GetName() ?? enumValue.ToString();

                                        <option value="@enumValue">@displayName</option>

                                    }
                                    <option value="" disabled>İzin Türü seçiniz!</option>
                                }

                            </select>
                            <span asp-validation-for="LeaveType" class="text-danger"></span>
                        </div>
                        <div class="form-group  mb-3">
                            <label asp-for="StartDateOfLeave" class="control-label"></label>
                            <input value="@Model.StartDateOfLeave.ToString("yyyy-MM-dd")"  type="date" asp-for="StartDateOfLeave" class="form-control" />
                            <span id="startDate" asp-validation-for="StartDateOfLeave" class="text-danger"></span>
                        </div>
                        <div class="form-group  mb-3">
                            <label asp-for="EndDateOfLeave" class="control-label"></label>
                            <input value="@Model.EndDateOfLeave.ToString("yyyy-MM-dd")"  type="date" asp-for="EndDateOfLeave" class="form-control" />
                            <span id="endDate" asp-validation-for="EndDateOfLeave" class="text-danger"></span>
                        </div>
                        <div class="form-group  mb-3">
                            <label asp-for="DaysOfLeave" class="control-label"></label>
                            <input id="amountInput" value="@Model.DaysOfLeave" type="number-decimal" min="0.5" step="0.5" asp-for="DaysOfLeave" class="form-control" />
                            <span id="daysOfLeave" asp-validation-for="DaysOfLeave" class="text-danger"></span>
                        </div>
                        <div class="form-group  mb-3">
                            <label asp-for="Explanation" class="control-label"></label>
                            <textarea id="Explanation" oninput="limitCharacters()" asp-for="Explanation" class="form-control" rows="8"></textarea>
                            <p id="charCount"></p>
                            <p id="charLimitMessage" style="color: red;"></p>
                            <span asp-validation-for="Explanation" class="text-danger"></span>
                        </div>
                        <div class="form-group  mb-3">
                            <input value="@Model.EmployeeId" asp-for="EmployeeId" type="hidden" class="form-control" />
                            <input value="@Model.Id" asp-for="Id" type="hidden" class="form-control" />
                            <input value="@Model.CreateDate" asp-for="CreateDate" type="hidden" class="form-control" />
                            <input value="@Model.LeaveNo" asp-for="LeaveNo" type="hidden" class="form-control" />
                        </div>
                        <div class="mb-3">
                            <label>*Zorunlu alan</label>
                        </div>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group d-grid">
                            <input type="submit" value="Güncelle" class="btn-submit" />
                        </div>

                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        // // İzin gün sayısı hesaplama
        // document.addEventListener("DOMContentLoaded", function () {
        //     const daysOfLeaveInput = document.querySelector('input[name="DaysOfLeave"]');
        //     const startDateInput = document.querySelector('input[name="StartDateOfLeave"]');
        //     const endDateInput = document.querySelector('input[name="EndDateOfLeave"]');

        //     // Başlangıç ve bitiş tarihleri arasındaki farkı hesaplayan fonksiyon
        //     function calculateDateDifference(startDate, endDate) {
        //         const start = new Date(startDate);
        //         const end = new Date(endDate);
        //         const differenceInTime = end.getTime() - start.getTime();
        //         const differenceInDays = differenceInTime / (1000 * 3600 * 24);
        //         return differenceInDays;
        //     }

        //     // Üç ay önceki tarihi döndüren fonksiyon
        //     function getDateThreeMonthsAgo() {
        //         const today = new Date();
        //         const threeMonthsAgo = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate() + 1);
        //         return threeMonthsAgo;
        //     }

        //     // İnput değişikliklerini dinleyen fonksiyon
        //     function handleInput() {
        //         const startDate = startDateInput.value;
        //         const endDate = endDateInput.value;
        //         const threeMonthsAgo = getDateThreeMonthsAgo();

        //         // Başlangıç tarihi, 3 ay öncesinden küçük olamaz
        //         if (new Date(startDate) < threeMonthsAgo) {
        //             startDateInput.value = threeMonthsAgo.toISOString().slice(0, 10); // 3 ay önceki tarihi inputa yaz
        //         }

        //         if (new Date(startDate) > new Date(endDate)) {
        //             endDateInput.value = startDate;
        //             endDate = startDate;
        //         }

        //         const daysDifference = calculateDateDifference(startDate, endDate);
        //         daysOfLeaveInput.max = daysDifference;

        //         // İzin gün sayısı, başlangıç ve bitiş tarihleri arasındaki farktan fazla olamaz
        //         if (parseFloat(daysOfLeaveInput.value) > daysDifference) {
        //             daysOfLeaveInput.value = daysDifference;
        //         }
        //     }

        //     // İnput değişikliklerini dinle
        //     startDateInput.addEventListener("change", handleInput);
        //     endDateInput.addEventListener("change", handleInput);
        //     daysOfLeaveInput.addEventListener("change", handleInput);

        //     // İnput değişikliklerini kontrol et
        //     handleInput();
        // });

        
        function validateLeaveDays() {
            const daysOfLeaveInput = document.querySelector('input[name="DaysOfLeave"]');
            const startDateInput = document.querySelector('input[name="StartDateOfLeave"]');
            const endDateInput = document.querySelector('input[name="EndDateOfLeave"]');

            function calculateDateDifference(startDate, endDate) {
                const start = new Date(startDate);
                const end = new Date(endDate);
                const differenceInTime = end.getTime() - start.getTime();
                const differenceInDays = differenceInTime / (1000 * 3600 * 24);
                return differenceInDays;
            }

            const startDate = startDateInput.value;
            const endDate = endDateInput.value;
            const daysDifference = calculateDateDifference(startDate, endDate);

            // Üç ay önceki tarihi döndüren fonksiyon
            function getDateThreeMonthsAgo() {
                const today = new Date();
                const threeMonthsAgo = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate() + 2);
                return threeMonthsAgo;
            }

            function getDateThreeMonthsLater() {
                const today = new Date();
                const threeMonthsLater = new Date(today.getFullYear(), today.getMonth() + 3, today.getDate());
                return threeMonthsLater;
            }

            // Başlangıç tarihi, 3 ay öncesinden küçük olamaz
            if (new Date(startDate) < threeMonthsAgo) {
                startDateInput.value = threeMonthsAgo.toISOString().slice(0, 10); // 3 ay önceki tarihi inputa yaz
                $('#startDate').text('Başlangıç tarihi, 3 ay öncesinden küçük olamaz!');
                return false; // Prevent form submission
            }

            if (new Date(endDate) > threeMonthsLater) {
                endDateInput.value = threeMonthsLater.toISOString().slice(0, 10); // 3 ay sonraki tarihi inputa yaz
                $('#endDate').text('Bitiş tarihi, 3 ay sonrasından büyük olamaz!');
                return false; // Prevent form submission
            }

            if (new Date(startDate) > new Date(endDate)) {
                endDateInput.value = startDate;
                endDate = startDate;
                $('#endDate').text('Bitiş tarihi, başlangıç tarihinden küçük olamaz!');
                return false; // Prevent form submission
            }

            // Get the value of entered leave days
            const enteredLeaveDays = parseFloat(daysOfLeaveInput.value);

            // Check if entered leave days are greater than the difference between start and end dates
            if (enteredLeaveDays > daysDifference) {
                // Display an error message or handle the validation accordingly
                $('#daysOfLeave').text('İzin gün sayısı, başlangıç ve bitiş tarihleri arasındaki farktan fazla olamaz!');
                return false; // Prevent form submission
            }
            return true; // Allow form submission
        }

        document.addEventListener("DOMContentLoaded", function () {


            // Update form submission handling to include leave days validation
            document.querySelector('form').addEventListener('submit', function (event) {
                // Validate leave days before form submission
                if (!validateLeaveDays()) {
                    event.preventDefault(); // Prevent form submission if validation fails
                }
            });
        });
    </script>
    <script>
        function limitCharacters() {
            var inputElement = document.getElementById('Explanation');
            var charCountElement = document.getElementById('charCount');
            var charLimitMessageElement = document.getElementById('charLimitMessage');

            var maxCharacters = 500; // Maksimum karakter sayısını belirle

            var enteredText = inputElement.value;
            var charCount = maxCharacters - enteredText.length;

            charCountElement.innerText = 'Kalan Karakter Sayısı: ' + charCount;

            if (charCount == 0) {
                inputElement.value = enteredText.slice(0, maxCharacters);
                charLimitMessageElement.innerText = 'Maksimum karakter sayısına ulaşıldı!';
            } else {
                charLimitMessageElement.innerText = '';
            }
        }
    </script>
</body>
