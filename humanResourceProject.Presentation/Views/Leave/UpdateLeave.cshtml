@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@using humanResourceProject.Domain.Enum;
@using humanResourceProject.Models.DTOs;
@model UpdateLeaveDTO

@{
    ViewData["Title"] = "UpdateLeave";
    Layout = "~/Views/Shared/_HRLayout.cshtml";
}
<head>

    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.css" />

    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.js"></script>
    <style>
        .panel {
            height: 120vh;
        }

        a {
            text-decoration: none;
        }
    </style>
</head>
<body>
   <div class="row">

        @Html.Partial("_PanelPartial")

        <div class="col-md-4" style="margin: 0 auto">
        <form asp-action="UpdateLeave">
                <h1>İzin Talebi Güncelle</h1>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group  mb-4">
                <label asp-for="StartDateOfLeave" class="control-label"></label>
                <input id="dateInputStart" value="@Model.StartDateOfLeave.ToString("yyyy-MM-dd")" type="date" asp-for="StartDateOfLeave" class="form-control" />
                <span asp-validation-for="StartDateOfLeave" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="EndDateOfLeave" class="control-label"></label>
                <input id="dateInputEnd" value="@Model.EndDateOfLeave.ToString("yyyy-MM-dd")" type="date" asp-for="EndDateOfLeave" class="form-control" />
                <span asp-validation-for="EndDateOfLeave" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="LeaveType" class="control-label"></label>
                <select asp-for="LeaveType" class="form-control" />
                @{
                    var enumType = typeof(LeaveType);
                    var enumValues = enumType.GetEnumValues();
                    foreach (var enumValue in enumValues)
                    {
                        var displayAttribute = enumType.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                        var displayName = displayAttribute?.GetName() ?? enumValue.ToString();
                        <option value="@enumValue">@displayName</option>
                    }
                        <option value="" disabled selected>İzin Tipi seçiniz!</option>
                }
                </select>
                <span asp-validation-for="LeaveType" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="Explanation" class="control-label"></label>
                <input asp-for="Explanation" class="form-control" />
                <span asp-validation-for="Explanation" class="text-danger"></span>
            </div>
            <div class="form-group  mb-4">
                <label asp-for="DaysOfLeave" class="control-label"></label>
                <input id="amountInput" value="@Model.DaysOfLeave" type="number" min="0.5" step="0.5" asp-for="DaysOfLeave" class="form-control" />
                <span asp-validation-for="DaysOfLeave" class="text-danger"></span>
            </div>
            <div class="form-group mb-4">
                <input asp-for="EmployeeId" type="hidden" class="form-control" />
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
            <div class="form-group mb-4">
                <input asp-for="Id" type="hidden" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Güncelle" class="btn btn-primary" />
            </div>
            </form>
            <div>
                <hr>
                <a asp-controller="Employee" asp-action="Home"><button class="custom-button custom-button--create-entity">Anasayfaya Dön</button></a>
            </div>
        </div>
    </div>

    <script>
        // İzin gün sayısı hesaplama
        document.addEventListener("DOMContentLoaded", function () {
            const daysOfLeaveInput = document.querySelector('input[name="DaysOfLeave"]');
            const startDateInput = document.querySelector('input[name="StartDateOfLeave"]');
            const endDateInput = document.querySelector('input[name="EndDateOfLeave"]');

            // Başlangıç ve bitiş tarihleri arasındaki farkı hesaplayan fonksiyon
            function calculateDateDifference(startDate, endDate) {
                const start = new Date(startDate);
                const end = new Date(endDate);
                const differenceInTime = end.getTime() - start.getTime();
                const differenceInDays = differenceInTime / (1000 * 3600 * 24);
                return differenceInDays;
            }

            // Üç ay önceki tarihi döndüren fonksiyon
            function getDateThreeMonthsAgo() {
                const today = new Date();
                const threeMonthsAgo = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate() + 1);
                return threeMonthsAgo;
            }

            // İnput değişikliklerini dinleyen fonksiyon
            function handleInput() {
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;
                const threeMonthsAgo = getDateThreeMonthsAgo();

                // Başlangıç tarihi, 3 ay öncesinden küçük olamaz
                if (new Date(startDate) < threeMonthsAgo) {
                    startDateInput.value = threeMonthsAgo.toISOString().slice(0, 10); // 3 ay önceki tarihi inputa yaz
                }

                if (new Date(startDate) > new Date(endDate)) {
                    endDateInput.value = startDate;
                    endDate = startDate;
                }

                const daysDifference = calculateDateDifference(startDate, endDate);
                daysOfLeaveInput.max = daysDifference;

                // İzin gün sayısı, başlangıç ve bitiş tarihleri arasındaki farktan fazla olamaz
                if (parseFloat(daysOfLeaveInput.value) > daysDifference) {
                    daysOfLeaveInput.value = daysDifference;
                }
            }

            // İnput değişikliklerini dinle
            startDateInput.addEventListener("change", handleInput);
            endDateInput.addEventListener("change", handleInput);

            // İnput değişikliklerini kontrol et
            handleInput();
        });
    </script>
</body>
