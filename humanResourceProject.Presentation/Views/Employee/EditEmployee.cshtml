@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using humanResourceProject.Domain.Enum
@model humanResourceProject.Models.DTOs.UpdateUserDTO

@{
    ViewData["Title"] = "EditEmployee";
}

<h2>Personel Güncelleme</h2>
<h4>Personel bilgilerini lütfen eksiksiz giriniz.</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="EditEmployee">
            <div class="form-group mb-3">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Gender" class="control-label"></label>
                <select asp-for="Gender" class="form-control">
                    @{
                        var enumType = typeof(Gender);
                        var enumValues = enumType.GetEnumValues();
                        foreach (var enumValue in enumValues)
                        {
                            var displayAttribute = enumType.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                            var displayName = displayAttribute?.GetName() ?? enumValue.ToString();
                            <option value="@enumValue">@displayName</option>
                        }
                    }

                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Job" class="control-label"></label>
                <input asp-for="Job" class="form-control" />
                <span asp-validation-for="Job" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <input value=@Model.DepartmentId asp-for="DepartmentId" type="hidden" class="form-control" />
                <span asp-validation-for="DepartmentId" class="text-danger"></span>
            </div>
            <div class="form-group d-grid mb-3">
                <input type="submit" value="Güncelle" class="btn btn-primary" />
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Employees">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
