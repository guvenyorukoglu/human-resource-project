@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using humanResourceProject.Domain.Enum
@model humanResourceProject.Models.DTOs.UserRegisterDTO

@{
    ViewData["Title"] = "CreatePersonel";
}

<h1>CreatePersonel</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="CreatePersonel">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MiddleName" class="control-label"></label>
                <input asp-for="MiddleName" class="form-control" />
                
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="control-label"></label>
                <input asp-for="ConfirmPassword" type="password" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Birthdate" class="control-label"></label>
                <input value="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.ToString("yyyy-MM-dd")" asp-for="Birthdate" type="date" class="form-control" />
                <span asp-validation-for="Birthdate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdentificationNumber" class="control-label"></label>
                <input asp-for="IdentificationNumber" class="form-control" />
                <span asp-validation-for="IdentificationNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BloodGroup" class="control-label"></label>
                <select asp-for="BloodGroup" class="form-control">
                    @foreach (var bloodGroup in Enum.GetValues(typeof(BloodGroup)))
                    {
                        <option value="@bloodGroup">@bloodGroup</option>
                    }
                </select>
                <span asp-validation-for="BloodGroup" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <select asp-for="Gender" class="form-control">
                    @{
                        var enumType = typeof(Gender);
                        var enumValues = enumType.GetEnumValues();
                        foreach (var enumValue in enumValues)
                        {
                            var displayAttribute = enumType.GetMember(enumValue.ToString())[0].GetCustomAttribute<DisplayAttribute>();
                            var displayName = displayAttribute?.GetName() ?? enumValue.ToString();
                            <option value="@enumValue">@displayName</option>
                        }
                    }

                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="JobId" class="control-label"></label>
                <select asp-for="JobId" asp-items="@Model.Jobs.Select(job => new SelectListItem { Text = job.Title, Value = job.Id.ToString() })" class="form-control">
                    <option value="" disabled>Meslek seçiniz!</option>B
                </select>
                <span asp-validation-for="JobId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UploadPath" class="control-label"></label>
                <input asp-for="UploadPath" type="file" class="form-control" />
                <span asp-validation-for="UploadPath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input value=@User.Claims.FirstOrDefault(x => x.Type == "CompanyId").Value asp-for="CompanyId" type="hidden" class="form-control" />
                <span asp-validation-for="CompanyId" class="text-danger"></span>
            </div>
            <div>
                <label>*Zorunlu alan</label>
            </div>
            <div class="form-group">
                <input type="submit" value="Ekle" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
